<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog do Bla</title><link href="/" rel="alternate"></link><link href="/feeds/git-github.atom.xml" rel="self"></link><id>/</id><updated>2016-07-16T18:21:00-03:00</updated><entry><title>Introdução a Git e GitHub</title><link href="/introducao-a-git-e-github.html" rel="alternate"></link><published>2016-07-16T18:21:00-03:00</published><author><name>Bla</name></author><id>tag:,2016-07-16:introducao-a-git-e-github.html</id><summary type="html">&lt;h2&gt;O que é Git?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pt.wikipedia.org/wiki/Git"&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/a&gt; é um &lt;a href="https://pt.wikipedia.org/wiki/Sistema_de_controle_de_vers%C3%A3o"&gt;sistema de controle de versão&lt;/a&gt;
criado, a princípio, para gerenciar o desenvolvimento do kernel &lt;a href=""&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/a&gt;.
Sua principal diferença em relação a outros sistemas de controle de versão
conhecidos (como &lt;a href="https://pt.wikipedia.org/wiki/Subversion"&gt;SVN&lt;/a&gt; e
&lt;a href="https://pt.wikipedia.org/wiki/CVS"&gt;CVS&lt;/a&gt;) é sua natureza distribuída.
Isto significa que não há, necessariamente, um repositório central.&lt;/p&gt;
&lt;h2&gt;O que é GitHub?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; é uma empresa focada em fornecer repositórios
git na nuvem além uma
série de funcionalidades para facilitar a colaboraçao de desenvolvedores em
projetos de software. O uso da plataforma é gratuito para projetos livres e/ou
de código aberto.&lt;/p&gt;
&lt;h2&gt;Interfaces&lt;/h2&gt;
&lt;p&gt;A interface oficial do git é o conjunto de ferramentas de linha de
comandos que vem com o git propriamente dito. Segundo a &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line"&gt;documentação
oficial&lt;/a&gt;
, é a única interface que permite acssar todas os comandos do git.&lt;br /&gt;
Entretando, existem outras formas de manipular os repositórios com uma
abordagem mais &lt;em&gt;user-friendly&lt;/em&gt;. A mais usada atualmente é a
GUI (&lt;em&gt;Graphical User Inteface&lt;/em&gt;) feita pela equipe do GitHub,
&lt;a href="https://desktop.github.com/"&gt;&lt;strong&gt;GitHub Desktop&lt;/strong&gt;&lt;/a&gt;.
Disponível para Mac e Windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;As instruções abaixo são para a &lt;em&gt;CLI&lt;/em&gt; (&lt;em&gt;Command Line Interface&lt;/em&gt;).&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Como criar um Repositório&lt;/h2&gt;
&lt;p&gt;A forma mais simples de ter um repositório local já vinculado a um
repositório no GitHub é através do comando
&lt;a href="https://git-scm.com/docs/git-clone"&gt;&lt;code&gt;git clone&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;
Para clonar um repositório é necessário que exista um repositório
remoto a ser clonado. Criar um repositório remoto no GitHub é bastante
simples graças à interface web fornecida pelo GitHub. Para tanto basta:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fazer login no &lt;a href="https://github.com/login"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clicar no botão verde &lt;code&gt;New Repository&lt;/code&gt; no lado direito da página&lt;/li&gt;
&lt;li&gt;Atribuir um nome para o novo repositório&lt;/li&gt;
&lt;li&gt;Clicar no botão verde &lt;code&gt;Create Repository&lt;/code&gt; na parte inferior da página.&lt;/li&gt;
&lt;li&gt;Copiar o link (https) que aparecerá na sessão &lt;strong&gt;Quick Setup&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Usar o comando &lt;code&gt;git clone URL&lt;/code&gt; na pasta onde quer criar o repositório
  (sendo URL o link copiado no item anterior)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O repositório estará criado localmente em seu computador na pasta com mesmo
nome do repositório criado no github.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Obs&lt;/em&gt;: É necessário digitar suas credenciais do GitHub ao fazer operações que
envolvem o repositórios remotos. Para contornar este problema veja este
&lt;a href="https://help.github.com/articles/why-is-git-always-asking-for-my-password/"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Fazendo seu primeiro &lt;em&gt;commit&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Um &lt;em&gt;commit&lt;/em&gt; é ação pela qual você envia as mudanças feitas para o repositório. O
comando para fazer &lt;em&gt;commit&lt;/em&gt; é &lt;a href="https://git-scm.com/docs/git-commit"&gt;&lt;code&gt;git commit&lt;/code&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Antes de fazer o &lt;em&gt;commit&lt;/em&gt; de alguma alteração é necessário marcá-la
para ser enviada no próximo &lt;em&gt;commit&lt;/em&gt;. A forma de fazer isto é com o
&lt;a href="https://git-scm.com/docs/git-add"&gt;&lt;code&gt;git add&lt;/code&gt;&lt;/a&gt;.
Este comando aceita pastas ou arquivos como argumentos,
assim como caracteres reservados do seu terminal (como "*", "." e "..").&lt;/p&gt;
&lt;p&gt;Antes de fazer um &lt;em&gt;commit&lt;/em&gt; é interessante verificar quais arquivos estão
marcados para serem enviados. Isto pode ser feito com
&lt;a href="https://git-scm.com/docs/git-status"&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note que &lt;code&gt;git commit&lt;/code&gt; envia as alterações para o repositório
local (no seu computador) e não para o repositório remoto nos servidores
do GitHub. Existem comandos para sincronizar o repositório remoto
com o local e vice versa. São eles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-push"&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/a&gt; sincroniza o
  repositório remoto com o repositório local.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-pull"&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/a&gt; sincroniza o
  repositório local com o repositório remoto.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Um fluxo bastante comum de trabalho segue as etapas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fazer as alterações desejadas.&lt;/li&gt;
&lt;li&gt;Marcar as mudanças para serem enviadas no próximo &lt;em&gt;commit&lt;/em&gt; com &lt;code&gt;git add&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enviar as mudanças para o repositório local com &lt;code&gt;git commit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enviar as mudanças para o repositório remoto com &lt;code&gt;git push&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Contribuindo para um projeto&lt;/h2&gt;
&lt;p&gt;É necessário fazer um &lt;a href="https://pt.wikipedia.org/wiki/Bifurca%C3%A7%C3%A3o"&gt;fork&lt;/a&gt;
do repositório do projeto
 para poder contribuir. Para tanto basta:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Logar em sua conta do GitHub.&lt;/li&gt;
&lt;li&gt;Acessar a página do repositório do projeto.&lt;/li&gt;
&lt;li&gt;Clicar no botão &lt;code&gt;Fork&lt;/code&gt; no canto superior direito da página.&lt;/li&gt;
&lt;li&gt;(Uma cópia deste repositório será criado em sua conta).&lt;/li&gt;
&lt;li&gt;Siga os passos nas seções sobre &lt;a href="#como-criar-um-repositório"&gt;criar primeiro repositório&lt;/a&gt;
  e &lt;a href="#fazendo-seu-primeiro-commit"&gt;fazer primeiro &lt;em&gt;commit&lt;/em&gt;&lt;/a&gt;. Para fazer
  as alterações desejadas.&lt;/li&gt;
&lt;li&gt;Requisitar que suas alterações sejam unidas com o repositório
  oficial. Através de um &lt;a href="#pull-request"&gt;&lt;strong&gt;Pull Request&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Pull Request&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pull request&lt;/strong&gt; é a ferramenta através da qual é proposta a união
entre dois &lt;a href="https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging"&gt;branches&lt;/a&gt;
de um projeto.&lt;br /&gt;
Para o escopo deste texto assuma que os branches serão sempre seu repositório
remoto e o repositório oficial do projeto. Para fazer um &lt;strong&gt;pull request&lt;/strong&gt;
você deve:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Acessar a página do seu repositório (aquele gerado pelo &lt;code&gt;Fork&lt;/code&gt; em sua conta).&lt;/li&gt;
&lt;li&gt;Clicar no botão verde &lt;code&gt;New pull request&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Verificar que as modificações que deseja requisitar a união são a que estão listadas.&lt;/li&gt;
&lt;li&gt;Clicar em &lt;code&gt;Create pull request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adicionar um título e descrição para o pull request.&lt;/li&gt;
&lt;li&gt;Clicar novamente em &lt;code&gt;Create pull request&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Aguardar a avaliação de algum dos responsáveis pelo repositório oficial.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Embora possar parecer um pouco complexo a princípio, o fluxo de trabalho,
ao usar &lt;strong&gt;Git&lt;/strong&gt; e &lt;strong&gt;GitHub&lt;/strong&gt;, é bastante simples e fácil de se acostumar.
Entender como realizar estas tarefas principais em linha de
comando pode ajudar drasticamente usuários interface gráfica
(&lt;a href="https://desktop.github.com/"&gt;&lt;strong&gt;GitHub Desktop&lt;/strong&gt;&lt;/a&gt;) também.&lt;/p&gt;</summary></entry></feed>